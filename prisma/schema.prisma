// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}
model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
}

model Airline {
  id              Int               @id @default(autoincrement())
  airlineName     String            @db.VarChar(255)
  country         String            @db.VarChar(255)
  FlightClassRole FlightClassRole[]
}

model FlightNumber {
  id              Int               @id @default(autoincrement())
  flightno        String            @db.VarChar(255)
  FlightClassRole FlightClassRole[]
}

model Departure {
  id              Int               @id @default(autoincrement())
  departure       String            @db.VarChar(255)
  FlightClassRole FlightClassRole[]
}

model FlightClassRole {
  id             Int   @id @default(autoincrement())
  className      String
  airlineId      Int
  flightNumberId Int
  departureId    Int
  price          Float

  airline      Airline      @relation(fields: [airlineId], references: [id])
  flightNumber FlightNumber @relation(fields: [flightNumberId], references: [id])
  departure    Departure    @relation(fields: [departureId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
